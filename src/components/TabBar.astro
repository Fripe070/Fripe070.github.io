---
interface Tab {
	title: string;
    href: string;
}

interface Props {
    tabs: Tab[];
}

const { tabs } = Astro.props;
---

<div class="tab-bar">
    <div class="tabs">
        {tabs.map((tab) => (
            <a href={tab.href} class={`tab ${tab.href === Astro.url.pathname ? 'active' : ''}`}>
                {tab.title}
            </a>
        ))}
    </div>
    <div class="controls">
        <div class="control">+</div>
        <div class="control">-</div>
        <div class="control">x</div>
    </div>
</div>
<style lang="scss">
    .tab-bar, .tabs, .controls {
        display: flex;
        flex-direction: row;
    }
    .tab-bar {
        background: var(--darker-bg);
        width: 100%;
        --bar-height: 3ch;
    }
    .tabs {
        flex: 1;
        overflow-x: auto;  // TODO: Make scrollbar pretty
    }

    .tab {
        background: var(--light-bg);
        width: fit-content;
        padding: 0.5ch 1ch;
        height: var(--bar-height);
        line-height: calc(var(--bar-height) - 1ch);
        text-decoration: none;
        color: var(--text-normal);
    }
    .tab:hover:not(.active) {
        background: var(--dark-bg);
    }
    .tab:focus {
        background: var(--one-dark-blue) !important;
        outline: none;
    }

    .tab.active {
		background: var(--darkest-bg);
    }
    .tab:not(:first-child) {
    }

    .control {
        height: var(--bar-height);
        width: var(--bar-height);
        text-align: center;
        line-height: calc(var(--bar-height));
        user-select: none;
    }
</style>
