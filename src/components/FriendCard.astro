---
export interface Props {
    names: [string, ...string[]];
    avatar: string;
    pixelated?: boolean
    link?: string;
    colour?: string;
};

const { 
    names, 
    avatar, 
    pixelated = true, 
    link,
    colour,
} = Astro.props;
---

<a class="card" href={link} style={{ "--user-colour": colour ?? "var(--lighter-bg)" }}>
    <div class="titlebar">
        <span class="names">
            <span>{names[0]}</span>
            {names.length > 1 && " / " 
            + names.slice(1).join(" / ")}
        </span>
        <i class="link-icon nf nf-oct-link"/>
    </div>
    
    

    <div class="inside">
        <div 
            class="avatar" 
            style={{ backgroundImage: `url(${avatar})` }} 
            class:list={pixelated ? 'pixelated' : ''}
        />
    
        <div class="content">
            {Astro.slots.default !== undefined && (
                <div class="description">
                    <slot />
                </div>
            )}
        </div>
    </div>
</a>

<style lang="scss">
    .card {
        width: fit-content;
        min-width: 30ch;

        display: flex;
        flex-direction: column;

        text-decoration: none;
        color: var(--text-normal);
    
        --border: .25ch solid var(--user-colour);
        border: var(--border);
    }
    .titlebar {
        background-color: var(--light-bg);
        border-bottom: var(--border);
        padding: 0.5ch;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;

        > .link-icon {
            margin-left: 1ch;
            color: var(--text-normal);
            font-size: 1.5em;
            width: 1.5em;
            text-align: center;
        }
    }
    .inside {
        background-color: var(--darker-bg);
        display: flex;
        flex-direction: row;
    }
    .content {
        padding: 1ch;
        border-left: var(--border);
    }
    .avatar {
        min-width: 10ch;
        min-height: 10ch;
        background-image: url({avatar});
        background-size: cover;
        background-position: center;
    }
    .names {
        font-size: 1.5em;
        line-height: 2ch;

        color: var(--text-normal);
        :first-child {
            font-weight: bold;
        }
    }
    .pixelated {
        image-rendering: pixelated;
    }
</style>
